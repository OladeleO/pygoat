name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitLeaks
        run: |
          wget https://github.com/zricethezav/gitleaks/releases/download/v8.2.0/gitleaks_8.2.0_linux_x64.tar.gz
          tar -xf gitleaks_8.2.0_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run GitLeaks
        run: gitleaks detect --source='.' --config-path=gitleaks.toml


  dependency-check:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
  
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Download Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.5.3/dependency-check-6.5.3-release.zip
          unzip dependency-check-6.5.3-release.zip -d dependency-check
          ls -alh dependency-check/

      - name: Run Dependency Check
        run: |
          ${GITHUB_WORKSPACE}/dependency-check/dependency-check/bin/dependency-check.sh --project "MyProject" --scan . --out . --format HTML --failOnCVSS 9 --disableAssembly || echo "Vulnerabilities found"

      - name: Ensure script is executable
        run: chmod +x ${GITHUB_WORKSPACE}/dependency-check/dependency-check/bin/dependency-check.sh

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: dependency-check-report.html



  sast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Run Bandit Scan
      run: |
        pip install bandit
        bandit -r . -ll -iii --exit-zero -o bandit-report.txt -f txt || echo "Bandit scan completed with issues"
    - name: Upload Bandit Report as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: bandit-report
        path: bandit-report.txt



  dast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Start Application
        run: docker-compose up -d
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          target: 'http://localhost:8000'
      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-scan-report
          path: zap-report.md



  container-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker Image
      run: docker build -t pygoat:latest .
    - name: Scan Docker Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'pygoat:latest'
    - name: Upload Trivy scan report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy-report.json
