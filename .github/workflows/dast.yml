name: DAST
on: [push, pull_request]

jobs:
  dast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up directory permissions
        run: |
          mkdir -p ${{ github.workspace }}/data/db
          mkdir -p ${{ github.workspace }}/zap_reports
          sudo chown -R 1000:1000 ${{ github.workspace }}/data/db
          sudo chown -R 1000:1000 ${{ github.workspace }}/zap_reports
          sudo chmod -R 777 ${{ github.workspace }}/data/db
          sudo chmod -R 777 ${{ github.workspace }}/zap_reports

      - name: Build Docker image
        run: docker build -t pygoat/pygoat .

      - name: Start database
        run: |
          docker network create pygoat_network
          docker run -d --name pygoat_db --network pygoat_network \
            -e POSTGRES_DB=postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres \
            -v $PWD/data/db:/var/lib/postgresql/data postgres

      - name: Run migrations
        run: |
          docker run --rm --network pygoat_network \
            -v $PWD:/app -w /app pygoat/pygoat \
            python manage.py migrate --noinput

      - name: Start web application
        run: |
          docker run -d --name pygoat_web --network pygoat_network \
            -p 8000:8000 -v $PWD:/app -w /app pygoat/pygoat \
            sh -c "pip install gunicorn && python -m gunicorn --bind 0.0.0.0:8000 --workers 6 pygoat.wsgi"

      - name: Check running containers
        run: docker ps

      - name: Check web container logs
        run: docker logs pygoat_web

      - name: Wait for application to be ready
        run: |
          max_retries=60
          retries=0
          until curl -sSf http://localhost:8000 > /dev/null || [ $retries -eq $max_retries ]
          do
            echo "Waiting for application to be ready..."
            sleep 5
            retries=$((retries+1))
          done
          if [ $retries -eq the max_retries ]; then
            echo "Application failed to start in time"
            docker-compose logs
            exit 1
          fi

      - name: Fix ZAP Report Permissions
        run: sudo chown -R 1000:1000 ${{ github.workspace }}/zap_reports && sudo chmod -R 777 ${{ github.workspace }}/zap_reports

      - name: OWASP ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000'
          docker_name: 'zaproxy/zap-stable'
          fail_action: false
          cmd_options: '-r /zap/wrk/zap_report.html'
        env:
          WORKSPACE: ${{ github.workspace }}

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: ${{ github.workspace }}/zap_reports/zap_report.html

      - name: Upload ZAP Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: zap-logs
          path: ~/.zap/zap.log

      - name: Cleanup
        if: always()
        run: docker-compose down -v
